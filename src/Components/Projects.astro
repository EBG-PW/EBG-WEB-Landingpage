---
import Heading from "./Heading.astro";

// TRANSLATION
const { translation = {} } = Astro.props;

interface IProject {
  id: number;
  puuid: string;
  name: string;
  description: string;
  avatar_url: string;
  color: string;
  date_start: string | null;
  date_end: string | null;
  date_apply: string | null;
  min_group: string;
}

const projects: IProject[] =
  ((await (
    await fetch(`${import.meta.env.API_URL}/api/v1/public/projects`)
  ).json()) as IProject[]) ?? [];
---

<style lang="scss">
  .wrapper {
    width: 100%;
    position: relative;

    background-color: white;

    .content {
      position: relative;
      z-index: 5;
      width: 1000px;
      margin: 0 auto;
      height: 100%;
      align-items: center;
      justify-content: center;

      flex-direction: column;

      padding: 20px 0;

      display: flex;

      @media only screen and (max-width: 1050px) {
        width: 100%;
        padding: 20px;
        box-sizing: border-box;
      }

      .projects {
        display: flex;
        font-family: "Inter Variable", sans-serif;
        gap: 15px;
        flex-wrap: wrap;

        @media only screen and (max-width: 1050px) {
          justify-content: center;
        }

        .project {
          background-color: #ebebeb;
          border-radius: 8px;
          overflow: hidden;

          width: 370px;
          position: relative;

          img {
            width: 100%;
            height: 150px;

            object-fit: cover;
          }

          .container {
            width: 350px;
            padding: 10px;
            display: flex;
            flex-direction: column;

            p.date {
              color: rgba(25, 25, 25);
              font-size: 0.8rem;
              line-height: 1rem;
            }

            p.description {
              color: rgba(25, 25, 25);
              font-size: 1rem;
              line-height: 1.5rem;

              text-align: justify;

              :global(a) {
                color: rgba(25, 25, 25);
              }
            }

            a.cta {
              margin-left: auto;

              text-decoration: none;
              display: inline-block;
              color: rgba(25, 25, 25);
              font-size: 0.8rem;
              line-height: 1rem;

              &:hover {
                text-decoration: underline;
              }
            }
          }

          @media only screen and (max-width: 420px) {
            width: 100%;

            .container {
              width: calc(100% - 20px);
            }
          }
        }
      }
    }
  }
</style>

<div class="wrapper">
  <div class="content" id="projects">
    <Heading level={2}>{translation.heading}</Heading>
    <div class="projects">
      {
        projects.map((project) => {
          function formatDate(dateString: string | null) {
            if (dateString === null) return "";
            const date = new Date(dateString);
            const day = String(date.getDate()).padStart(2, "0");
            const month = String(date.getMonth() + 1).padStart(2, "0"); // Months are 0-indexed
            const year = date.getFullYear();

            return `${day}.${month}.${year}`;
          }
          return (
            <div class="project">
              <img src={project.avatar_url} alt={project.name} />
              <div class="container">
                <Heading level="3">{project.name}</Heading>
                <p class="date">{formatDate(project.date_start)}</p>
                <p class="description" set:html={project.description} />
              </div>
            </div>
          );
        })
      }
    </div>
  </div>
</div>
